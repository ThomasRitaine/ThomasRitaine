# Color gradient used : https://huemint.com/gradient-7/#palette=a3aed2-769ff0-3883c5-3c699a-31486e-2a3e4f-1d2230
# From the brighter to the darker : #a3aed2, #769ff0, #3883c5, #3c699a, #31486e, #2a3e4f, #1d2230

# Font color for each block : https://huemint.com/gradient-7/#palette=1a1a1a-e1eaf8-f0e68c-e9f2ff-e1eaf8-dde6f4-c8d2e7
# From the left hand block to the right one : #1a1a1a, #e1eaf8, #f0e68c, #e9f2ff, #e1eaf8, #dde6f4, #c8d2e7

format = """
[‚ï≠‚îÄ‚óÄ](#a3aed2)\
    [ ${env_var.STARSHIP_DISTRO} ](fg:#000000 bg:#a3aed2)\
[ÓÇ¥](fg:#a3aed2 bg:#769ff0)\
    $username\
    ${custom.local_hostname}\
    $hostname\
[ÓÇ¥](fg:#769ff0 bg:#3883c5)\
    $directory\
[ÓÇ¥](fg:#3883c5 bg:#3c699a)\
    $git_branch\
    ${custom.giturl}\
    $git_status\
[ÓÇ¥](fg:#3c699a bg:#31486e)\
    ${custom.docker}\
[ÓÇ¥](fg:#31486e bg:#2a3e4f)\
    $nodejs\
    $php\
    $python\
[ÓÇ¥](fg:#2a3e4f bg:#1d2230)\
    $time\
[ÓÇ¥ ](fg:#1d2230)\
$fill\
$status\
$cmd_duration\
( | ‚ö†Ô∏è$memory_usage)\
$line_break\
[‚ï∞‚îÄ](#a3aed2)\
[‚ùØ ](#a3aed2)"""

# Shows an icon depending on what distro it is running on
[env_var.STARSHIP_DISTRO]
format = '$env_value'
variable = "STARSHIP_DISTRO"

[custom.root_emoji]
command = "[ \"$(id -u)\" -eq 0 ] && echo \" üëë\""
when = true

[username]
format = "[ $user${custom.root_emoji}]($style)" # Default is '[$user]($style) in '
show_always = true 
style_root = 'fg:#e1eaf8 bg:#769ff0' 
style_user = 'fg:#e1eaf8 bg:#769ff0' 

[custom.local_hostname]
command = "[ -z \"${SSH_CONNECTION}\" ] && echo 'in ÔÄï'"
format = '[( $output )]($style)'
style = 'fg:#e1eaf8 bg:#769ff0'
when = true

[hostname]
format = '[ in $ssh_symbol$hostname]($style)' 
ssh_only = true 
style = 'fg:#e1eaf8 bg:#769ff0' 
trim_at = '' # Not to trim SSH hostname on first '.'

[directory]
format = '[ $path ($read_only )]($style)'
read_only = "Ô†Ω"
style = 'fg:#f0e68c bg:#3883c5'
truncate_to_repo = false
truncation_length = 5
truncation_symbol = '‚Ä¶/'

# [directory.substitutions]
# "dev-projects" = "Óû£ "

[git_branch]
format = "[ $symbol$branch ]($style)"
style = 'fg:#e9f2ff bg:#3c699a'
symbol = "Ôêò "

[custom.giturl]
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL="Ôêà "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL="Ôäñ "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL="ÔÖ± "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL="Ôû° "
else
    GIT_REMOTE_SYMBOL="Ôáí "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
description = "Display symbol for remote Git server"
format = "[on $output  ]($style)"
style = 'fg:#e9f2ff bg:#3c699a'
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'

[git_status]
format = '([\[$all_status$ahead_behind\] ]($style))'
style = 'fg:#e9f2ff bg:#3c699a'

[custom.docker]
command = "docker compose ps -a --format json | jq -r '.[0].State // \"never been up\"'"
detect_files = ['docker-compose.yml']
format = '[ $symbol ($output )]($style)'
style = 'fg:#0db7ed bg:#31486e'
symbol = "Ôåà "

# No runtime versions because I run my project in Docker containers
[nodejs]
format = '[ on $symbol]($style)'
style = 'fg:#6cc24a bg:#2a3e4f'
symbol = "Óúò "
[php]
format = '[ on [$symbol]($style)]($style)'
style = 'fg:#99cc99 bg:#2a3e4f'
symbol = "ÓúΩ "
[python]
format = '[ on $symbol]($style)'
style = 'fg:#4584b6 bg:#2a3e4f'
symbol = "Óúº "

[time]
disabled = false 
format = '[ Ôê∫ $time ]($style)' 
style = 'fg:#c8d2e7 bg:#1d2230' 
time_format = "%R" # Hour:Minute Format

[fill]
symbol = " "

[status]
disabled = false

[cmd_duration]
format = "‚åõ$duration" 
min_time = 1_000 # Show command duration over 1,000 milliseconds (=1 sec)
show_milliseconds = true 

[memory_usage]
disabled = false
format = ' $symbol [${ram}( \| ${swap})]($style)'
symbol = "Ô°ö "
threshold = 66
